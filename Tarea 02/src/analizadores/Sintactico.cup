package analizadores; 
import java_cup.runtime.*;
import java.util.LinkedList;
import practica.*;


parser code 
{:
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        int fil = (s.right)+1;
        int col = (s.left)+1;
        System.out.println("Error Sintáctico en la Línea " + (fil) +
        " Columna "+(col)+ ". No se esperaba este componente: " +s.value+"."); 
    } 

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        int fil = (s.right)+1;
        int col = (s.left)+1;
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (fil)+ " Columna "+col+". Componente " + s.value + 
        " no reconocido."); 
    }  
:} 

terminal String numerico;
terminal String pun;

non terminal S;
non terminal String E;
non terminal String D;

//Iniciar
start with S;

S::= E:b pun D:a{:
    System.out.print(""+((Double.parseDouble(b))+((Double.parseDouble(a)))));
:};

E::=E:b numerico:a{:
    RESULT=""+(((Double.parseDouble(b))*2+(Double.parseDouble(a))));
:}
|numerico:a{:
    RESULT=a;
:};


D::=numerico:a D:b{:
    RESULT=""+(((Double.parseDouble(b))+(Double.parseDouble(a)))/2);
:}
|numerico:a{:
    RESULT=""+((Double.parseDouble(a))/2);
:};